[{"/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/index.js":"1","/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/App.js":"2","/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/reportWebVitals.js":"3","/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/Converter.js":"4"},{"size":500,"mtime":1610419161526,"results":"5","hashOfConfig":"6"},{"size":183,"mtime":1610483795819,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610419161527,"results":"8","hashOfConfig":"6"},{"size":2175,"mtime":1610485031108,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1fk35mz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/index.js",[],["20","21"],"/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/App.js",[],"/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/reportWebVitals.js",[],"/Users/admin/full-time-unemployed-dev/minis/currency-converter/currency-converter/src/Converter.js",["22"],"import React, { useState, useEffect } from 'react'\nimport { Paper, TextField, FormControl, Select, Button } from '@material-ui/core'\nimport axios from 'axios'\nimport './App.css'\n\n\n\nexport default function Converter() {\n  const [text1, setText1] = useState(1)\n  const [text2, setText2] = useState(2)\n  const [country, setCountry] = useState([])\n  const [country2, setCountry2] = useState([])\n  const [value1, setValue1] = useState(1)\n  const [value2, setValue2] = useState(1)\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  async function getData() {\n    const endpoint = 'latest'\n    await axios.get('http://data.fixer.io/api/' + endpoint + '?access_key=' + '1267e02d9c7c1afd1f157f1cf02819e3').then((res) => {\n      console.log(res.data)\n      setCountry(res.data.rates);\n      setCountry2(res.data.rates);\n    })\n  }\n\n  function convert(e) {\n    e.preventDefault();\n    let num = (value2 / value1) * text1;\n    setText2(num)\n  }\n\n  return (\n    <div className=\"wall\">\n      <Paper className=\"paper\">\n        <h3>Currency Converter</h3>\n        <form onSubmit={convert}>\n          <div>\n            <TextField variant='outlined' value={text1 || \"\"} onChange={(e) => setText1(e.target.value)} autoComplete='off' className='textfield' />\n            <FormControl className='dropdown' variant='outlined' onChange={(e) => setValue1(e.target.value)} >\n              <Select native className=\"select\">\n                {Object.keys(country).map((value, index) => <option key={index} value={country[value]}>{value}</option>)}\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField variant='outlined' value={text2 || \"\"} className='textfield' />\n            <FormControl className='dropdown' variant='outlined' onChange={(e) => setValue2(e.target.value)} >\n              <Select native className=\"select\">\n                {Object.keys(country2).map((value, index) => <option key={index} value={country[value]}>{value}</option>)}\n              </Select>\n            </FormControl>\n          </div>\n          <Button type='submit' variant='contained' className='button'>Convert</Button>\n        </form>\n      </Paper>\n    </div>\n  )\n}\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":22,"column":77,"nodeType":"29","messageId":"30","endLine":22,"endColumn":78},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]